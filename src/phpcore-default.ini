[PHPCore]

;;;;;;;;;;;;;;;;;;;;;;;
; About phpcore.ini   ;
;;;;;;;;;;;;;;;;;;;;;;;
; PHPCore's initialization file, generally called phpcore.ini, is responsible
; for configuring many of the aspects of PHPCore's behavior. This file is
; closely based off of PHP's configuration file since PHPCore purpose is to
; extend PHP and act as a core for projects.
; See PHP website for more information on PHP.
; https://www.php.net

; PHPCore attempts to find and load this configuration from a number of
; locations. The Base PHPCore ini is required and will throw a warning if not
; found. Subsequent configurations will be loaded and used to override or extend
; the previous configurations in the following order:
; 1. Base PHPCore ini location (e.g. /etc/phpcore/phpcore.ini) [REQUIRED]
; 2. The PHPCORERC environment variable. (e.g. PHPCORERC="~/phpcore.ini")
; 3. Current working directory
; See the PHPCore docs for more specific information.
; https://manual.phpcore.org/configuration

; The syntax of the file is extremely simple. Whitespace and lines beginning
; with a semicolon are silently ignored (as you probably guessed). Section
; headers (e.g. [Database]) are used to attached a configuration to a class
; (e.g. \PHPCore\Database). 

; The value can be a string, a number, one of the INI constants (On, Off, True,
; False, Yes, No and None), or a quoted string ("bar").

; Boolean flags can be turned on using the values 1, On, True or Yes.
; They can be turned off using the values 0, Off, False or No.

; An empty string can be denoted by simply not writing anything after the equal
; sign, or by using the None keyword:

; foo =         ; sets foo to an empty string
; foo = None    ; sets foo to an empty string
; foo = "None"  ; sets foo to the string 'None'

;;;;;;;;;;;;;;;;;;;
; About this file ;
;;;;;;;;;;;;;;;;;;;
; PHPCore comes packaged with a 'phpcore-default.ini' INI file. It is highly
; recommended you review and change these configurations for a production
; environment.

; --------------------------------------------------------------------------------------------------

;;;;;;;;;;;;;;;;;
; Core behavior ;
;;;;;;;;;;;;;;;;;

; This directive allows you to lock this config to a PHPCore version. This will
; throw an E_USER_WARNING if the PHPCore does not match this value.
; It will matach the first part of this string, some examples are as follows:
;
; version_lock = "1.0"   ---- version "1.0.0" = OK
;                        ---- version "1.0.1" = OK
;                        ---- version "1.1.0" = THROW WARNING
;
; version_lock = "1.0.1" ---- version "1.0.0" = THROW WARNING
;                        ---- version "1.0.1" = OK
;                        ---- version "1.1.0" = THROW WARNING
;
; version_lock = "1"     ---- version "1.0.0" = OK
;                        ---- version "1.0.1" = OK
;                        ---- version "1.1.0" = OK
;                        ---- version "2.0.0" = THROW WARNING
;
; https://manual.phpcore.org/configuration/version-lock
version_lock = "1.0"

; This directive allows you to disable certain functions.
; Caution should be used to remove or replace functions that are used by the
; PHPCore classes.
; It receives a comma-delimited list of function names.
; https://manual.phpcore.org/configuration/disable-functions
disable_functions = None

; This directive allows you to include a file that contains custom functions
; that will be loaded with the bootstrap.
;function_file = "/absolute/path/functions.php"

; This directive allows you to disable certain classes. This will remove them
; from the PHPCore autoloader so you can substitute your own should you see fit.
; If you replace a class ensure that your autoloader is setup to look for the
; 'PHPCore\CLASS-NAME' string and your class uses the PHPCore name space. All
; replacement classes should still use their associated interface to prevent
; unforeseen issues in other classes that may use the replaced class.
; You do not need to include classes that are not used here, they are only
; loaded if they are called. 
; It receives a comma-delimited list of class names.
; https://manual.phpcore.org/configuration/disable-classes
disable_classes = None

; This directive allows you to declare the supported output formats.
; It receives a comma-delimited list of output formats.
supported_formats = "text,json,xml,html"
default_format = "json"

; Which variable of the $_SERVER the client ip address is trusted
; REMOTE_ADDR
; HTTP_X_FORWARDED_FOR
request.ip_var = "REMOTE_ADDR"

; This directive can be used delcare additional directive to be added to the
; spl_autoload_register() function.
; See https://www.php.net/manual/en/language.oop5.autoload.php
;autoloader.{namespace} = "/absolute/path"

; --------------------------------------------------------------------------------------------------

[Database]

; If you are using the PHPCore extended schema you need to declare where the
; extended schema database is located.
;
; NOTE: The extended schema database MUST be using the same database DSN
; as the Main Database connection. 
extended_schema = "/absolute/path/extended_schema.db"

; This directive section allows you to set up database connections to use the
; `Database:getInstance({conneciton_name})` static method for connections
; declared in this section. This will allow you to communicate with a database
; without having to supply credentials at run time. The 'main' connection name
; will be used as the default connection if no connections name is supplied.
; You may declare up to nine alternate connections using the the prefix
; (e.g. `altX.dsn`) where 'X' denotes the alternate number. The altX.name
; is a REQUIRED directive for all alternate connections.
; the connection.
;
; NOTE: For the Beta version of PHPCore ONLY the mysql & sqlite drivers are
;       supported at this time. Feel free to use other drivers however the
;       Database class may need to be edited.

; Main Database connection
;
; main.dsn: The Data Source Name, or DSN, contains the information required to
;           connect to the database.
; main.usr: The user name for the DSN string. This parameter is optional for some
;           PDO drivers.
; main.pwd: The password for the DSN string. This parameter is optional for some PDO
;           drivers.
main.dsn = "mysql:host=localhost;dbname=dev_test;charset=utf8mb4"
main.usr = "dev"
main.pwd = "dev-temp-password"

; Alternate 1 "backup" Database connection
;
; altX.dsn: The Data Source Name, or DSN, contains the information required to
;           connect to the database.
; altX.usr: The user name for the DSN string. This parameter is optional for some
;           PDO drivers.
; altX.pwd: The password for the DSN string. This parameter is optional for some PDO
;           drivers.
; altXname: The unique name to be used as an alias for this connection.
alt1.dsn = "sqlite:"
alt1.usr = None
alt1.pwd = None
alt1.name = "backup"

; --------------------------------------------------------------------------------------------------

[Session]

; This directive section is where you define your session driver if used. 
; Many of the directive below are already set in your php.ini however you can
; choose to override them here or comments them out and the values in your
; php configuration will be used as default.
; https://www.php.net/manual/en/session.configuration.php

; Handler used to store/retrieve data.
; https://php.net/session.save-handler
;
; Example
; save_handler = "files"
; save_handler = "memcached"
save_handler = "memcached"

; Prefix, if used, for the session save handler uses. Not all handlers use this
; directive.
;
; Example
; save_handler_id_prefix = "memc.sess.key."
save_handler_id_prefix = "memc.sess.key."

; Argument passed to save_handler.  In the case of files, this is the path
; where data files are stored. Note: Windows users have to change this
; variable in order to use PHP's session functions.
;
; The path can be defined as:
;
;     save_path = "N;/path"
;
; where N is an integer.  Instead of storing all the session files in
; /path, what this will do is use subdirectories N-levels deep, and
; store the session data in those directories.  This is useful if
; your OS has problems with many files in one directory, and is
; a more efficient layout for servers that handle many sessions.
;
; NOTE 1: PHP will not create this directory structure automatically.
;         You can use the script in the ext/session dir for that purpose.
; NOTE 2: See the section on garbage collection below if you choose to
;         use subdirectories for session storage
;
; The file storage module creates files using mode 600 by default.
; You can change that by using
;
;     save_path = "N;MODE;/path"
;
; where MODE is the octal representation of the mode. Note that this
; does not overwrite the process's umask.
; https://php.net/session.save-path
;
; Example
; save_path = "/var/lib/php/sessions"
; save_path = "localhost:11211"
; save_path = "localhost:11211,127.0.0.1:11211"
;           => localhost port 1121 weight 0
;           => 127.0.0.1 port 1121 weight 1
save_path = "localhost:11211"

; Name of the session (used as cookie name).
; https://php.net/session.name
;
; Example
; name = PHPSESSID
name = "WS-SessionID"


; Initialize session on request startup.
; https://php.net/session.auto-start
;
; NOTE: This will trigger the start of the session in the bootstrap.php file.
;
; Example 
; auto_start = Yes
auto_start = Yes

; Lifetime in seconds of cookie or, if 0, until browser is restarted.
; https://php.net/session.cookie-lifetime
;
; Example
; cookie_lifetime = 0

; The path for which the cookie is valid.
; https://php.net/session.cookie-path
;
; Example
; cookie_path = "/"

; The domain for which the cookie is valid.
; https://php.net/session.cookie-domain
;
; Example
; cookie_domain = 
; cookie_domain = "my-domain.com"

; Whether or not to add the httpOnly flag to the cookie, which makes it
; inaccessible to browser scripting languages such as JavaScript.
; https://php.net/session.cookie-httponly
;
; Example
; cookie_httponly = 

; Add SameSite attribute to cookie to help mitigate Cross-Site Request Forgery (CSRF/XSRF)
; Current valid values are "Strict", "Lax" or "None". When using "None",
; make sure to include the quotes, as `none` is interpreted like `false` in ini files.
; https://tools.ietf.org/html/draft-west-first-party-cookies-07
;
; Example
; cookie_samesite =

; Whether or not the cookie will delete when the session is destroyed.
;
; Example cookie_autodestroy = Yes
cookie_autodestroy = Yes

; Defines the probability that the 'garbage collection' process is started on every
; session initialization. The probability is calculated by using gc_probability/gc_divisor,
; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.
; Default Value: 1
; Development Value: 1
; Production Value: 1
; https://php.net/session.gc-probability
;
; Example
; gc_probability = 0
gc_probability = 10

; Defines the probability that the 'garbage collection' process is started on every
; session initialization. The probability is calculated by using gc_probability/gc_divisor,
; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.
; For high volume production servers, using a value of 1000 is a more efficient approach.
; Default Value: 100
; Development Value: 1000
; Production Value: 1000
; https://php.net/session.gc-divisor
;
; Example
; gc_divisor = 1000
gc_divisor = 1000

; After this number of seconds, stored data will be seen as 'garbage' and
; cleaned up by the garbage collection process.
; https://php.net/session.gc-maxlifetime
;
; This is also known as max idle session time
;
; Example
; gc_maxlifetime = 1440 ..... 24 minutes
gc_maxlifetime = 1440

; After this number of seconds the session will be considered too long in length
; and its data will be cleared out. This is determined by the session start time
; and the current time when the session is read.
; Set to None if there is no max length a session can.
;
; This is also known as max session time
;
; Example
; gc_maxlength = 28800 ..... 8 hours
gc_maxlength = 28800

; Automatically encrypts and decrypts data when it is written or read from the
; the session save_handler.
;
; Example
; encrypt = Yes
encrypt = No

; Defines the key phase to be used to salt the hash for the save_handler
; encryption process.
;
; Example
; key_phase = "my-secret-key-phase"
key_phase = "61cf03436ebe14578372875ffd26389d11de2f44"

; Defines what default ACL groups should be assigned on new session creation.
; It receives a comma-delimited list of ACL groups.
;
; Example
; acl_group.default_guest = "GUEST,PUBLIC"
acl_group.default_guest = "GUEST,PUBLIC"
acl_group.default_user = "USER,PUBLIC"

; Regenerate Session ID after request counts reach
;regenerate_afterrequests = None
; Regenerate Session ID after specified time
;regenerate_aftertime = None


; EOF //////////////////////////////////////////////////////////////////////////////////////////////
