[PHPCore]

;;;;;;;;;;;;;;;;;;;;;;;
; About phpcore.ini   ;
;;;;;;;;;;;;;;;;;;;;;;;
; PHPCore's initialization file, generally called phpcore.ini, is responsible
; for configuring many of the aspects of PHPCore's behavior. This file is
; closely based off of PHP's configuration file since PHPCore purpose is to
; extend PHP and act as a core for projects.
; See PHP website for more information on PHP.
; https://www.php.net

; PHPCore attempts to find and load this configuration from a number of
; locations. The Base PHPCore ini is required and will throw a warning if not
; found. Subsequent configurations will be loaded and used to override or extend
; the previous configurations in the following order:
; 1. Base PHPCore ini location (e.g. /etc/phpcore/phpcore.ini) [REQUIRED]
; 2. The PHPCORERC environment variable. (e.g. PHPCORERC="~/phpcore.ini")
; 3. Current working directory
; See the PHPCore docs for more specific information.
; https://manual.phpcore.org/configuration

; The syntax of the file is extremely simple. Whitespace and lines beginning
; with a semicolon are silently ignored (as you probably guessed). Section
; headers (e.g. [Database]) are used to attached a configuration to a class
; (e.g. \PHPCore\Database). 

; The value can be a string, a number, one of the INI constants (On, Off, True,
; False, Yes, No and None), or a quoted string ("bar").

; Boolean flags can be turned on using the values 1, On, True or Yes.
; They can be turned off using the values 0, Off, False or No.

; An empty string can be denoted by simply not writing anything after the equal
; sign, or by using the None keyword:

; foo =         ; sets foo to an empty string
; foo = None    ; sets foo to an empty string
; foo = "None"  ; sets foo to the string 'None'

;;;;;;;;;;;;;;;;;;;
; About this file ;
;;;;;;;;;;;;;;;;;;;
; PHPCore comes packaged with a 'phpcore-default.ini' INI file. It is highly
; recommended you review and change these configurations for a production
; environment.

; --------------------------------------------------------------------------------------------------

;;;;;;;;;;;;;;;;;
; Core behavior ;
;;;;;;;;;;;;;;;;;

; This directive allows you to lock this config to a PHPCore version. This will
; throw an E_USER_WARNING if the PHPCore does not match this value.
; It will matach the first part of this string, some examples are as follows:
;
; version_lock = "1.0"   ---- version "1.0.0" = OK
;                        ---- version "1.0.1" = OK
;                        ---- version "1.1.0" = THROW WARNING
;
; version_lock = "1.0.1" ---- version "1.0.0" = THROW WARNING
;                        ---- version "1.0.1" = OK
;                        ---- version "1.1.0" = THROW WARNING
;
; version_lock = "1"     ---- version "1.0.0" = OK
;                        ---- version "1.0.1" = OK
;                        ---- version "1.1.0" = OK
;                        ---- version "2.0.0" = THROW WARNING
;
; https://manual.phpcore.org/configuration/version-lock
version_lock = "1.0"

; This directive allows you to disable certain functions.
; Caution should be used to remove or replace functions that are used by the
; PHPCore classes.
; It receives a comma-delimited list of function names.
; https://manual.phpcore.org/configuration/disable-functions
disable_functions = None

; This directive allows you to disable certain classes. This will remove them
; from the PHPCore autoloader so you can substitute your own should you see fit.
; If you replace a class ensure that your autoloader is setup to look for the
; 'PHPCore\CLASS-NAME' string and your class uses the PHPCore name space. All
; replacement classes should still use their associated interface to prevent
; unforeseen issues in other classes that may use the replaced class.
; You do not need to include classes that are not used here, they are only
; loaded if they are called. 
; It receives a comma-delimited list of class names.
; https://manual.phpcore.org/configuration/disable-classes
disable_classes = None

; This directive allows you to declare the supported output formats.
; It receives a comma-delimited list of output formats.
supported_formats = "text,json,xml,html"
default_format = "json"

;error_encryption.method = "aes128"
;error_encryption.key = "vah511o8qp9jwlnoj3u77gwdmaru9hat"
;error_encryption.iv = "tnE22Q0iP594wSzj"

; --------------------------------------------------------------------------------------------------

[Database]

; This directive section allows you to set up database connections to use the
; `Database:getInstance({conneciton_name})` static method for connections
; declared in this section. This will allow you to communicate with a database
; without having to supply credentials at run time. The 'main' connection name
; will be used as the default connection if no connections name is supplied.
; You may declare up to nine alternate connections using the the prefix
; (e.g. `altX.dsn`) where 'X' denotes the alternate number. The altX.name
; is a REQUIRED directive for all alternate connections.
; the connection.
;
; NOTE: For the Beta version of PHPCore ONLY the mysql & sqlite drivers are
;       supported at this time. Feel free to use other drivers however the
;       Database class may need to be edited.

; Main Database connection
main.dsn = "mysql:host=localhost;dbname=dev_test;charset=utf8mb4"
main.usr = "dev"
main.pwd = "dev-temp-password"

; Alternate 1 "backup" Database connection
alt1.dsn = "sqlite:"
alt1.usr = None
alt1.pwd = None
alt1.name = "backup"

; Alternate 2 Database connection
;alt2.dsn = "sqlite:/tmp/sqlite.db"
;alt2.usr = None
;alt2.pwd = None

[Session]

; This directive section is where you define your session driver if used. If no
; session driver is use dsn MUST be set to "None".

; NOT USED, hooking into PHP native session handeler
;driver = "memcached"
;servers[] = "memcached:host=localhost;port=11211"
;servers[] = "memcached:host=127.0.0.1;port=11211"

; session.save_handler = memcached
save_handler = "memcached"

; session.save_path = "localhost:11211"
; save_path = "localhost:11211,127.0.0.1:11211"
; => localhost port 1121 weight 0
; => 127.0.0.1 port 1121 weight 1
save_path = "localhost:11211"

; session.auto_start = 0
auto_start = No

; session.name = PHPSESSID
name = "PHPSESSID"

autostart = No
encrypt = Yes
key_phase = "61cf03436ebe14578372875ffd26389d11de2f44"

; EOF //////////////////////////////////////////////////////////////////////////////////////////////
